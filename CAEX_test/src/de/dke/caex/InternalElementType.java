//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.1 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.05.04 at 05:08:34 PM BST 
//


package de.dke.caex;

import java.util.ArrayList;
import java.util.List;

import Interfaces.IInternalElementType;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Defines base structures for a hierarchical object instance. The instance maybe part of the InstanceHierarchy or a SystemUnitClass.
 * 
 * <p>Java class for InternalElementType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="InternalElementType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.dke.de/CAEX}SystemUnitClassType"&gt;
 *       &lt;sequence minOccurs="0"&gt;
 *         &lt;element name="RoleRequirements" maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;extension base="{http://www.dke.de/CAEX}CAEXBasicObject"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element name="Attribute" type="{http://www.dke.de/CAEX}AttributeType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                   &lt;element name="ExternalInterface" type="{http://www.dke.de/CAEX}InterfaceClassType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *                   &lt;element name="MappingObject" type="{http://www.dke.de/CAEX}MappingType" minOccurs="0"/&gt;
 *                 &lt;/sequence&gt;
 *                 &lt;attribute name="RefBaseRoleClassPath" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="RefBaseSystemUnitPath" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "InternalElementType", propOrder = {
    "roleRequirements"
})
public class InternalElementType
    extends SystemUnitClassType implements IInternalElementType
{

    @XmlElement(name = "RoleRequirements")
    protected List<InternalElementType.RoleRequirements> roleRequirements;
    @XmlAttribute(name = "RefBaseSystemUnitPath")
    protected String refBaseSystemUnitPath;

    /**
     * Gets the value of the roleRequirements property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the roleRequirements property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRoleRequirements().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InternalElementType.RoleRequirements }
     * 
     * 
     */
    @Override
	public List<InternalElementType.RoleRequirements> getRoleRequirements() {
        if (roleRequirements == null) {
            roleRequirements = new ArrayList<InternalElementType.RoleRequirements>();
        }
        return this.roleRequirements;
    }

    /**
     * Gets the value of the refBaseSystemUnitPath property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Override
	public String getRefBaseSystemUnitPath() {
        return refBaseSystemUnitPath;
    }

    /**
     * Sets the value of the refBaseSystemUnitPath property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    @Override
	public void setRefBaseSystemUnitPath(String value) {
        this.refBaseSystemUnitPath = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;extension base="{http://www.dke.de/CAEX}CAEXBasicObject"&gt;
     *       &lt;sequence&gt;
     *         &lt;element name="Attribute" type="{http://www.dke.de/CAEX}AttributeType" maxOccurs="unbounded" minOccurs="0"/&gt;
     *         &lt;element name="ExternalInterface" type="{http://www.dke.de/CAEX}InterfaceClassType" maxOccurs="unbounded" minOccurs="0"/&gt;
     *         &lt;element name="MappingObject" type="{http://www.dke.de/CAEX}MappingType" minOccurs="0"/&gt;
     *       &lt;/sequence&gt;
     *       &lt;attribute name="RefBaseRoleClassPath" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "attribute",
        "externalInterface",
        "mappingObject"
    })
    public static class RoleRequirements
        extends CAEXBasicObject
    {

        @XmlElement(name = "Attribute")
        protected List<AttributeType> attribute;
        @XmlElement(name = "ExternalInterface")
        protected List<InterfaceClassType> externalInterface;
        @XmlElement(name = "MappingObject")
        protected MappingType mappingObject;
        @XmlAttribute(name = "RefBaseRoleClassPath", required = true)
        protected String refBaseRoleClassPath;

        /**
         * Gets the value of the attribute property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the Jakarta XML Binding object.
         * This is why there is not a <CODE>set</CODE> method for the attribute property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAttribute().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AttributeType }
         * 
         * 
         */
        public List<AttributeType> getAttribute() {
            if (attribute == null) {
                attribute = new ArrayList<AttributeType>();
            }
            return this.attribute;
        }

        /**
         * Gets the value of the externalInterface property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the Jakarta XML Binding object.
         * This is why there is not a <CODE>set</CODE> method for the externalInterface property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getExternalInterface().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link InterfaceClassType }
         * 
         * 
         */
        public List<InterfaceClassType> getExternalInterface() {
            if (externalInterface == null) {
                externalInterface = new ArrayList<InterfaceClassType>();
            }
            return this.externalInterface;
        }

        /**
         * Gets the value of the mappingObject property.
         * 
         * @return
         *     possible object is
         *     {@link MappingType }
         *     
         */
        public MappingType getMappingObject() {
            return mappingObject;
        }

        /**
         * Sets the value of the mappingObject property.
         * 
         * @param value
         *     allowed object is
         *     {@link MappingType }
         *     
         */
        public void setMappingObject(MappingType value) {
            this.mappingObject = value;
        }

        /**
         * Gets the value of the refBaseRoleClassPath property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRefBaseRoleClassPath() {
            return refBaseRoleClassPath;
        }

        /**
         * Sets the value of the refBaseRoleClassPath property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRefBaseRoleClassPath(String value) {
            this.refBaseRoleClassPath = value;
        }

    }

}
